# No semicolons

{
  x
  if (a) {
    var b = c
    d
  } else
    e
}

==>

Cell(Block(
  ExpressionStatement(VariableName),
  IfStatement(if,ParenthesizedExpression(VariableName),Block(
     VariableDeclaration(var,VariableDefinition,Equals,VariableName),
     ExpressionStatement(VariableName)),
   else,ExpressionStatement(VariableName))))

# Continued expressions on new line

{
  x
  + 2
  foo
  (bar)
}

==>

Cell(Block(
  ExpressionStatement(BinaryExpression(VariableName,ArithOp,Number)),
  ExpressionStatement(CallExpression(VariableName,ArgList(VariableName)))))

# Doesn't parse postfix ops on a new line

{
  x
  ++y
}

==>

Cell(Block(
  ExpressionStatement(VariableName),
  ExpressionStatement(UnaryExpression(ArithOp,VariableName))))

# Eagerly cut return/break/continue

{
  return 2
  return
  2
  continue foo
  continue
  foo
  break bar
  break
  bar
}

==>

Cell(Block(
  ReturnStatement(return,Number),
  ReturnStatement(return),
  ExpressionStatement(Number),
  ContinueStatement(continue,Label),
  ContinueStatement(continue),
  ExpressionStatement(VariableName),
  BreakStatement(break,Label),
  BreakStatement(break),
  ExpressionStatement(VariableName)))

# Cut return regardless of whitespace

{
  { return }

  return // foo
;
}

==>

Cell(Block(Block(ReturnStatement(return)),ReturnStatement(return,LineComment)))
