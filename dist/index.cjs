'use strict';

Object.defineProperty(exports, '__esModule', { value: true });

var lr = require('@lezer/lr');
var common = require('@lezer/common');

// This file was generated by lezer-generator. You probably shouldn't edit it.
const noSemi = 174,
  incdec = 1,
  incdecPrefix = 2,
  templateContent = 175,
  templateDollarBrace = 176,
  templateEnd = 177,
  insertSemi = 178,
  spaces = 180,
  newline = 181,
  LineComment = 3,
  BlockComment = 4;

/* Hand-written tokenizers for JavaScript tokens that can't be
   expressed by lezer's built-in tokenizer. */

const space = [9, 10, 11, 12, 13, 32, 133, 160, 5760, 8192, 8193, 8194, 8195, 8196, 8197, 8198, 8199, 8200,
               8201, 8202, 8232, 8233, 8239, 8287, 12288];

const braceR = 125, braceL = 123, semicolon = 59, slash = 47, star = 42,
      plus = 43, minus = 45, dollar = 36, backtick = 96, backslash = 92;

const trackNewline = new lr.ContextTracker({
  start: false,
  shift(context, term) {
    return term == LineComment || term == BlockComment || term == spaces ? context : term == newline
  },
  strict: false
});

const insertSemicolon = new lr.ExternalTokenizer((input, stack) => {
  let {next} = input;
  if ((next == braceR || next == -1 || stack.context) && stack.canShift(insertSemi))
    input.acceptToken(insertSemi);
}, {contextual: true, fallback: true});

const noSemicolon = new lr.ExternalTokenizer((input, stack) => {
  let {next} = input, after;
  if (space.indexOf(next) > -1) return
  if (next == slash && ((after = input.peek(1)) == slash || after == star)) return
  if (next != braceR && next != semicolon && next != -1 && !stack.context && stack.canShift(noSemi))
    input.acceptToken(noSemi);
}, {contextual: true});

const incdecToken = new lr.ExternalTokenizer((input, stack) => {
  let {next} = input;
  if (next == plus || next == minus) {
    input.advance();
    if (next == input.next) {
      input.advance();
      let mayPostfix = !stack.context && stack.canShift(incdec);
      input.acceptToken(mayPostfix ? incdec : incdecPrefix);
    }
  }
}, {contextual: true});

const template = new lr.ExternalTokenizer(input => {
  for (let afterDollar = false, i = 0;; i++) {
    let {next} = input;
    if (next < 0) {
      if (i) input.acceptToken(templateContent);
      break
    } else if (next == backtick) {
      if (i) input.acceptToken(templateContent);
      else input.acceptToken(templateEnd, 1);
      break
    } else if (next == braceL && afterDollar) {
      if (i == 1) input.acceptToken(templateDollarBrace, 1);
      else input.acceptToken(templateContent, -1);
      break
    } else if (next == 10 /* "\n" */ && i) {
      // Break up template strings on lines, to avoid huge tokens
      input.advance();
      input.acceptToken(templateContent);
      break
    } else if (next == backslash) {
      input.advance();
    }
    afterDollar = next == dollar;
    input.advance();
  }
});

// This file was generated by lezer-generator. You probably shouldn't edit it.
const spec_identifier = {__proto__:null,import:14, viewof:28, mutable:30, as:33, with:36, from:39, for:48, await:51, let:60, var:62, const:64, true:90, false:90, this:92, null:94, super:96, new:120, yield:127, void:128, typeof:130, delete:132, class:144, extends:146, async:163, function:164, instanceof:196, in:198, of:237, while:240, do:246, if:250, else:252, switch:256, case:262, default:266, try:270, catch:272, finally:274, return:278, throw:282, break:286, continue:292, debugger:296};
const spec_word = {__proto__:null,async:107, get:109, set:111, static:153};
const parser = lr.LRParser.deserialize({
  version: 13,
  states: "!8OO#PQYOOO%dQ$WO'#CgO%kQWO'#CiO'pQYO'#DPO)qQ$WO'#GhOOQ#t'#Gh'#GhO*XOSO'#DXO*dQYO'#DhO*nQYO'#CrO,WQYO'#DlO.WQWO'#ESO.`QWO'#EROOQ#v'#EX'#EXO0[Q$WO'#GeO0uQWO'#EmOOQ#v'#Ge'#GeO0zQ#|O'#FjO1SQWO'#FkQOQWOOOOQO'#G['#G[O1XQ`O'#EsO,WQYO'#DiO1dQWO'#FnO1oQWO'#FpO1zQWO'#FpO2PQWO'#EYOOQ#v,59T,59TOOQO,5<W,5<WO2UQWO'#CiO2ZQWO'#GbO%pQYO'#GbO2cQWO,59kO2hQYO'#FwO2uQWO'#GjO4nQbO'#GjO4uQWO,59zO5]QpO'#DaO5sQWO'#ESO6XQWO'#GaO6gQ#|O'#G`O6{QWO'#DuO1oQWO'#EOO7WQWO'#EOO1[Q`O'#EsO,WQYO'#FvO7cQ#|O,59tO7zQYO'#DkO8UQpO,5:pO,WQYO,5:pOOQQ'#Ee'#EeOOQQ'#Eg'#EgO,WQYO,5:tO,WQYO,5:tO,WQYO,5:tO,WQYO,5:tO,WQYO,5:tO,WQYO,5:tO,WQYO,5:tO,WQYO,5:tO,WQYO,5:tO,WQYO,5:tO,WQYO,5:tOOQQ'#Ek'#EkO8^QYO,5;UOOQ#v,5;Z,5;ZOOQ#v,5;[,5;[OOQ#v,5;],5;]O,WQYO'#GgOOOS'#Fu'#FuO:^OSO,59sOOQ#v,59s,59sO:iQWO'#GnO:tQWO'#GnO:|QWO,5:SO;RQWO,5:`O;WQ$WO'#CgOOQO'#ES'#ESO;_QWO'#FgOOQQ'#Gw'#GwOOQQ'#G^'#G^OOQQ'#Fs'#FsO;dQYO,59^OOQ#v,59^,59^O1jQWO'#FiO1oQWO'#FhO<|QWO'#EOO:iQWO'#CyO=XQWO'#CsO=aQWO'#EwO=aQWO'#EyO=fQYO'#EzO=aQWO'#E|O=aQWO'#FPO>{QWO'#FWO?QQ#}O'#F[O,WQYO'#F^O?]Q#}O'#F`O?hQ#}O'#FcO0zQ#|O'#FeOAdQ$WO,5:WOA}QYO,5<VOA}QYO,5:mO,WQYO,5;XOOQQ'#G]'#G]OOQQ,5<U,5<UOBbQWO'#CfOBpQWO,58|O,WQYO,5;^OBxQpO,5;_ODkQ$WO,5:TOOQ#t'#Cg'#CgOEsQpO'#DxOOQO,5<Y,5<YO,WQYO,5<YOEzQWO,5<ZOOQO'#Df'#DfOFSQWO'#DhO>{QWO,5<[OFeQWO,5<[OFmQWO,5<]O1oQWO,5<[OOQ#v'#Ch'#ChOFrQWO'#FtOGWQWO,5<|OGWQWO,5<|OG`QbO,5=UOOQ#t1G/V1G/VOGgQbO,5<cO,WQYO,5<cOOQO-E9u-E9uOGqQWO,5=UOOQ#v1G/f1G/fOGyQWO'#DTOOQO'#Gm'#GmO,WQYO'#GmOHeQWO'#GmOIPQWO'#DbOK[QYO'#DbOKcQWO'#GkOKkQWO,59{OKpQWO'#DSOLOQWO'#GcOLWQWO,59mOL]QpO'#DbOL|QpO'#DbO,WQYO,5<zOOQ#v,5:a,5:aO,WQYO,5:aOMWQWO,5:aO>{QWO,5:jOFmQWO,5:jOFeQWO,5:jO1oQWO,5:jOM`QWO,5:mOMeQ$WO,5<bOOQ#t-E9t-E9tONRQbO'#GoO,WQYO'#GoON]QWO,5:VOOQ#v'#DT'#DTOOQ#v1G0[1G0[ONbQWO1G0[O!!jQ$WO1G0`O!!qQ$WO1G0`O!${Q$WO1G0`O!%SQ$WO1G0`O!'TQ$WO1G0`O!'eQ$WO1G0`O!)xQ$WO1G0`O!*PQ$WO1G0`O!,ZQ$WO1G0`O!,bQ$WO1G0`O!.PQ$WO1G0`O!0pQ!dO'#CgO!2eQ!dO1G0pO!4YQ!dO'#GeO!4mQ`O,5=ROOOS-E9s-E9sOOQ#v1G/_1G/_O!4rQWO'#DPO!5TQWO,5=YO!5]QpO'#DROOQ#t'#Ga'#GaO!5nQWO'#FxO!5TQWO,5=YOOQO1G/n1G/nOOQ#v1G/z1G/zO=fQYO,5<ROOQQ-E9q-E9qOOQ#v1G.x1G.xO!6SQWO,5<TO>{QWO,5<SOFmQWO,5<SOFeQWO,5<SO1oQWO,5<SO!6[Q#|O'#G_O0zQ#|O,59eO!6gQYO'#CxOOQQ'#Et'#EtOOQQ'#Eu'#EuO=fQYO,59_O=[QWO,59_O,WQYO'#DtO=fQYO,5;cO=fQYO,5;eO!6wQWO,5;fO=fQYO,5;hO!6|QWO,5;kO!7RQYO,5;rOOQQ,5;v,5;vO,WQYO,5;vO0zQ#|O,5;xOOQQ,5;z,5;zO!:gQWO,5;zOOQQ,5;},5;}O!:gQWO,5;}OOQQ,5<P,5<POOQO1G1q1G1qO0zQ#|O1G1sOOQ#v1G0X1G0XO!:lQ$WO1G0XO!;YQ$WO1G0sO!;vQWO'#CgO!<RQWO'#GZO!<ZQWO,59QO!<`QWO'#GZO!<eQWO1G.hO!<jQWO1G.hO!<oQbO1G0xOOQ#v1G0y1G0yOOQ#v1G/o1G/oOOQ#t'#Dg'#DgOOQ#t'#D{'#D{O!<vQ#|O'#D|OOQO'#F{'#F{O!=UQpO,5:dOOQ#v,5:d,5:dO!=]QpO'#DyO!=eQpO'#DyO!=vQpO'#D}O!>QQWO1G1tOOQO1G1u1G1uO,WQYO1G1uOOQO1G1v1G1vO>{QWO1G1vOFmQWO1G1wO>{QWO1G1wOFeQWO1G1vOOQO,5<`,5<`O:iQWO,5<`OOQO-E9r-E9rO!>VQWO1G2hO!>_QWO1G2pO!>gQbO1G1}O!>qQWO,5=XO8^QYO,59nO:iQWO,59nO8^QYO,59|O>{QWO,59|O!>vQ!dO,59|OOQO,59n,59nO!?QQpO'#FyO!?hQWO,5=VOOQ#v1G/g1G/gO!?pQpO'#F|O!@UQWO,5<}OOQ#t1G/X1G/XOFmQWO,59|OL]QpO,59|O!@^Q$WO1G2fO!>QQWO1G/{OOQ#v1G/{1G/{O,WQYO1G/{OOQ#v1G0U1G0UO>{QWO1G0UOFmQWO1G0UOFeQWO1G0UOA}QYO1G0XO!@qQYO'#FzO!AOQWO,5=ZO!AWQbO,5=ZOOQ#v1G/q1G/qOOQ#v7+%v7+%vO!AbQ!dO,5:WO,WQYO7+&[O!AlQ!dO,5:TO!AyQ`O,59tOOOS1G2m1G2mO:iQWO'#GbO!BRQWO1G2tO:iQWO'#DSO:iQWO,5<dOOQO,5<d,5<dOOQO-E9v-E9vOOQQ1G1m1G1mOOQQ1G1o1G1oO,WQYO1G1oOOQQ1G1n1G1nO>{QWO1G1nOFmQWO1G1nOFeQWO1G1nO:iQWO'#F}O!BZQ#|O,5<yOOQQ1G/P1G/PO!BfQbO,5=`O!BpQWO,5=`O!B{QYO,59dO!CSQWO,59dO:iQWO,5=`OOQQ1G.y1G.yO=fQYO1G.yOOQQ1G0}1G0}OOQQ1G1P1G1PO=aQWO1G1QO!CXQYO1G1SO!FgQYO'#FROOQQ1G1V1G1VO>{QWO1G1^O!HVQWO1G1^O0zQ#|O1G1bOOQQ1G1d1G1dOOQ#t'#Fb'#FbO0zQ#|O1G1fO0zQ#|O1G1iOOQO7+'_7+'_O!H_QWO'#FrO!HpQWO,5<uOOQO1G.l1G.lO1jQWO,5<uO0zQ#|O7+$SO!HxQWO7+$SOOQ#v7+&d7+&dOOQO,5:h,5:hO,WQYO,5:hO>{QWO,5:eOOQO-E9y-E9yOOQ#v1G0O1G0OOFmQWO,5:eO!=]QpO,5:eO!H}Q#|O,5:hO!I]QpO,5:eOOQO,5:i,5:iOOQO7+'`7+'`O!>QQWO7+'aOOQO7+'b7+'bO>{QWO7+'cOOQO7+'c7+'cO>{QWO7+'bOFmQWO7+'cOOQO1G1z1G1zOOQO1G2s1G2sO!InQ!dO1G/YO!IxQWO1G/YO!JTQ!dO1G/hOOQO1G/h1G/hO8^QYO'#DbOOQO,5<e,5<eOOQO-E9w-E9wOOQO,5<h,5<hOOQO-E9z-E9zO>{QWO1G/hOFmQWO1G/hOOQ#v7+%g7+%gO!>QQWO7+%gOOQ#v7+%p7+%pO>{QWO7+%pOFmQWO7+%pO!J_Q$WO7+%sOOQ#v7+%s7+%sO!J{QbO,5<fO,WQYO,5<fOOQO-E9x-E9xO!KVQWO1G2uO!K_Q!dO1G0XO!M`Q!dO1G0`O!MgQ!dO1G0`O# bQ!dO1G0`O# iQ!dO1G0`O##ZQ!dO1G0`O##kQ!dO1G0`O#%oQ!dO1G0`O#%vQ!dO1G0`O#'qQ!dO1G0`O#'xQ!dO1G0`O#)gQ!dO1G0`O#)zQ$WO<<IvO#*hQ!dO1G0sOOQO1G2O1G2OO!>QQWO7+'ZOOQQ7+'Y7+'YO>{QWO7+'YOFmQWO7+'YOOQ#t,5<i,5<iOOQ#t-E9{-E9{O,WQYO1G2zO,WQYO1G2{O#*uQYO1G/OO#*|QWO1G/OO#+RQYO1G/OO#+YQ#|O1G2zOOQQ7+$e7+$eO0zQ#|O7+&lO=fQYO7+&nOOQQ'#Gv'#GvOOQQ'#GO'#GOO#+nQYO,5;mOOQQ,5;m,5;mO,WQYO'#FSO#-^QWO'#FUOOQQ7+&x7+&xO#-cQYO7+&xO:iQWO7+&xOOQQ7+&|7+&|OOQQ7+'Q7+'QOOQQ7+'T7+'TOOQO,5<^,5<^O#0tQWO,5<^OOQO-E9p-E9pO#0yQWO1G2aOOQO<<Gn<<GnO#1RQWO<<GnO#1WQ$WO1G0SOOQO1G0P1G0PO>{QWO1G0POFmQWO1G0POOQO1G0S1G0SO,WQYO1G0SO!=]QpO1G0POOQO<<J{<<J{OOQO<<J}<<J}OOQO<<J|<<J|O>{QWO<<J}O8^QYO7+$tO#1bQ!dO1G2fOOQO7+%S7+%SO>{QWO7+%SOOQ#v<<IR<<IROOQ#v<<I[<<I[O>{QWO<<I[O#1lQbO1G2QO#1vQ!dO7+%sOOQQ<<Ju<<JuOOQQ<<Jt<<JtO>{QWO<<JtO#2TQWO7+(fO#2YQWO7+(gOOQQ7+$j7+$jO#2_QWO7+$jO#2dQYO7+$jO#2kQWO7+$jO,WQYO7+(fO,WQYO7+(gOOQQ<<JW<<JWOOQQ<<JY<<JYOOQQ-E9|-E9|OOQQ1G1X1G1XO#2pQWO,5;nOOQQ,5;p,5;pO>{QWO<<JdO#2uQWO<<JdO1jQWO1G1xO#2zQWO7+'{O0zQ#|OAN=YOOQO7+%n7+%nOOQO7+%k7+%kO>{QWO7+%kO#1WQ$WO7+%nOFmQWO7+%kOOQOAN@iAN@iO#3SQ!dO<<H`OOQO<<Hn<<HnOOQ#vAN>vAN>vO#3^Q!dO<<IvOOQQAN@`AN@`OOQQ<<LQ<<LQOOQQ<<LR<<LROOQQ<<HU<<HUO#3kQWO<<HUO#3pQYO<<HUO#3wQWO<<LQO#3|QWO<<LROOQQ1G1Y1G1YOOQQAN@OAN@OO>{QWOAN@OOOQO7+'d7+'dOOQOG22tG22tOOQO<<IV<<IVOOQO<<IY<<IYO>{QWO<<IVOOQQAN=pAN=pO#4RQWOAN=pOOQQANAlANAlOOQQANAmANAmO#4WQYOG25jOOQOAN>qAN>qOOQQG23[G23[O>{QWOLD+UOOQQ!$'Np!$'NpO#9iQbO'#CgO#9yQ$WO'#CgO#:aQbO'#GhO8^QYO'#DlO8^QYO'#DiO8^QYO,5:tO8^QYO,5:tO8^QYO,5:tO8^QYO,5:tO8^QYO,5:tO8^QYO,5:tO8^QYO,5:tO8^QYO,5:tO8^QYO,5:tO8^QYO,5:tO8^QYO,5:tO#:hQYO,5:mO8^QYO,5;XO8^QYO,5<zO#<hQ!dO'#CgO#:hQYO1G0XO8^QYO7+&[O#<uQWO'#ERO#<zQWO'#EmO#=PQWO'#EYO#=UQWO'#GaO#=aQWO'#G`O#=lQWO,5:mO#=qQ!dO1G0pO7WQWO'#EOO8^QYO,5;U",
  stateData: "#=}~O$zOS${OSROSSOS~OPXOQXOXWO^cO_cOd_OiXOkVOrROx_O}_O!O_O!P_O!Q_O!R_O!^eO!aXO!bXO!cXO!dXO!eXO!fXO!gXO%YUO%d[O~OVdO!jfO!shO!tgO$|PO~P`OP[Xa[Xe[Xk[Xr[Xz[X!e[X!g[X!wZX!y[X!z[X!}[X#O[X#P[X#Q[X#R[X#S[X#T[X#U[X#V[X#W[X#Y[X#[[X#][X#b[X$x[X%Y[X%e[X%f[X%g[X~OzZX~P#dO$|PO~OPXOQXOV{OXtO^cO_cOd_OiXOkVOrROx_O}_O!O_O!P_O!Q_O!R_O!^eO!aXO!bXO!cXO!dXO!eXO!fXO!gXO!jxO!szO!tyO$|+vO%YUO%d[O~OapOtnOq%UPq%^P~P%pOP!bOa|Ok!OOr!QO!e!bO!g!VO!y!PO!z!PO!}!TO#O!UO#P!UO#Q!UO#R!WO#S!XO#T!XO#U!XO#V!XO#W!YO#Y![O#[!^O#]!_O%YUO%e!RO%f!SO%g!`O~Oe%[X$x%[Xj%[Xq%[XX%[Xy%[X~P(QO$u!fO$v!eO$w!hO~Ot!iOj%bP~P%pOV{OW!tOb!{Oe!qOh!yOn!xOo!xOp!xO!j!uO!s!wO!t!vO#l!zO#o!|O#q!}O#t#OO#{#PO$P#QO$R#RO$T#SO$W#TO$Y#UO$|!mO~P`OPXOQXOV{OXtO^cO_cOd_OiXOkVOrROx_O}_O!O_O!P_O!Q_O!R_O!^eO!aXO!bXO!cXO!dXO!eXO!fXO!gXO!jxO!szO!tyO$|+wO%YUO%d[O~Oz#WO!w!vX~O!w#XO~Oz#YO#b#YOP%XXa%XXe%XXk%XXr%XX!e%XX!g%XX!y%XX!z%XX!}%XX#O%XX#P%XX#Q%XX#R%XX#S%XX#T%XX#U%XX#W%XX#Y%XX#[%XX#]%XX%Y%XX%e%XX%f%XX%g%XX~O#V%XX$x%XXq%XXj%XX%]%XXX%XXy%XX~P.eOz#YO~Oe#ZO$x#ZO~Oz#WO~OX#]Ok#_O!y#`O~OX#cO!k#eO$|#bO~Ok#hO$|#bO%`#gO~O!t#lO~O#V!XO~O$|#mO~Oa#nOq%UX~Oq#rO~Ot#tOa$kXq$kX~P,WOapOq%^X~OP!bOapOk!OOr!QO!e!bO!g!VO!y!PO!z!PO!}!TO#O!UO#P!UO#Q!UO#R!WO#S!XO#T!XO#U!XO#V!XO#W!YO#Y![O#[!^O#]!_O%YUO%e!RO%f!SO%g!`O~Oq%^X~P2}Oq#wO~Or#zO!V$UO!W$TO!X$TO%`#gO~Od#{Ot#}Ox#{O%W#xOW%VPW%_P~P4zOa%TXq%TXz%TX!w!vXj%TXW%TX~Oz#YOa%TXq%TXj%TX~Oz$VOa%SXq%SXj%SXe%SX$x%SX~OX#cO!k$XO$|#bO~Ok#hO!t$^O$|#bO~Oa|Oe|a$x|aj|aq|aX|ay|a~Ot$cOj%cP~P,WO%W$eO%d[O~OP+yOQ+yOV{OXtO^cO_cOd_Oi+yOkVOrROx_O}_O!O_O!P_O!Q_O!R_O!^+zO!a+yO!b+yO!c+yO!d+yO!e+yO!f+yO!g+yO!jxO!s,eO!tyO$|$sO%YUO%d[O~O$u!fO$v!eO$w$xO~OX${Or$yO$|#bO~Oa$}Oj%bX~Oj%PO~Oj%QO~Oy$UX~P#dOy%RO~OV{OW%TOb!{Oe!qOh!yOn!xOo!xOp!xO!j!uO!s!wO!t!vO#l!zO#o!|O#q!}O#t#OO#{#PO$P#QO$R#RO$T#SO$W#TO$Y#UO$|!mO~P`Ok#hO!t%YO$|#bO~Oi%aOk%]O~Ok%bO~OV{Ob!{Oe!qOh!yOn!xOo!xOp!xO!j!uO!s!wO!t!vO#l!zO#o!|O#q!}O#t#OO#{#PO$P#QO$R#RO$T#SO$W#TO$Y#UO$|!mO~P`OXWO~Oe#ZO$t%jO$x#ZO~Oe#ZO$t%mO$x#ZO~Oe#ZO$t%oO$x#ZO~Ok!OOr!QO!y!PO!z!PO%YUOP!`aa!`a!e!`a!g!`a!}!`a#O!`a#P!`a#Q!`a#R!`a#S!`a#T!`a#U!`a#V!`a#W!`a#Y!`a#[!`a#]!`a%e!`a%f!`a%g!`a~Oe!`a$x!`aq!`aj!`a%]!`aX!`ay!`a~P?sOV{O!jxO!szO!tyO$|+wO~P`O^cO_cO$|%vOW$}P~Ob%{Oc%zO~O%W$eO~OP!bOk!OOr!QO!e!bO!g!VO!y!PO!z!PO!}!TO#O!UO#P!UO#Q!UO#R!WO#S!XO#T!XO#U!XO#V!XO#W!YO#Y![O#[!^O#]!_O%YUO%e!RO%f!SO%g!`O~Oa!]ae!]a$x!]aq!]aj!]a%]!]aX!]ay!]a~PB}Oe&SO!V&WO!W&VO!X&VO!n&XO%W&PO%`#gO%d&QO~OW&UO~PEXOX#cO!k&[O~OX${Or$yOt!iO$|#bOj%bP~Ok#hO$|#bO~Ok#hO~OX${Or$yOt&cO$|#bOa$hXq$hX~Oa#nOq%Ua~Oq%^a~P2}Oa$kaq$ka~PB}OapOq%^a~OWwXW!ZXawXa!ZXk!ZXywXy!ZXzwX~Oy&jOz&iOWvXW%aXavXa%aXk%aXy%aX~Ok#hOy&kOW!UXa!UX~OP+yOQ+yOV{OXtO^cO_cOd_Oi+yOkVOrROx_O}_O!O_O!P_O!Q_O!R_O!^+zO!a+yO!b+yO!c+yO!d+yO!e+yO!f+yO!g+yO!jxO!s,eO!tyO%YUO%d[O~O$|,ZO~PI_Oa&oOW%_X~OW&qO~Oy&jOz&iOWvXavX~Oa&rOW%VX~OW&tO~Od#yOr#zOx#yO%W&PO~Od#yOr#zOx#yO%W&PO%`#gO~O!W&vO!X&vO~PLkOX#cO!k&zO~O!w'PO~Oa$jae$ja$x$jaj$jaq$ja%]$jaX$jay$ja~PB}Oa'QOj%cX~PB}Oj'TO~Oq'UO~OP!bOk!OOr!QO!e!bO!y!PO!z!PO%YUOa!|ie!|i!g!|i#O!|i#P!|i#Q!|i#R!|i#S!|i#T!|i#U!|i#V!|i#W!|i#Y!|i#[!|i#]!|i$x!|i%e!|i%f!|i%g!|iq!|ij!|i%]!|iX!|iy!|i~O!}!|i~PNgO!}!TO~PNgOP!bOk!OOr!QO!e!bO!y!PO!z!PO!}!TO#O!UO#P!UO#Q!UO%YUOa!|ie!|i#R!|i#S!|i#T!|i#U!|i#V!|i#W!|i#Y!|i#[!|i#]!|i$x!|i%e!|i%f!|i%g!|iq!|ij!|i%]!|iX!|iy!|i~O!g!|i~P!!xO!g!VO~P!!xOP!bOk!OOr!QO!e!bO!g!VO!y!PO!z!PO!}!TO#O!UO#P!UO#Q!UO#R!WO%YUOa!|ie!|i#W!|i#Y!|i#[!|i#]!|i$x!|i%e!|i%f!|i%g!|iq!|ij!|i%]!|iX!|iy!|i~O#S!|i#T!|i#U!|i#V!|i~P!%ZO#S!XO#T!XO#U!XO#V!XO~P!%ZOP!bOk!OOr!QO!e!bO!g!VO!y!PO!z!PO!}!TO#O!UO#P!UO#Q!UO#R!WO#S!XO#T!XO#U!XO#V!XO#W!YO%YUOa!|ie!|i#Y!|i#[!|i#]!|i$x!|i%f!|i%g!|iq!|ij!|i%]!|iX!|iy!|i~O%e!|i~P!'uO%e!RO~P!'uOP!bOk!OOr!QO!e!bO!g!VO!y!PO!z!PO!}!TO#O!UO#P!UO#Q!UO#R!WO#S!XO#T!XO#U!XO#V!XO#W!YO#Y![O%YUO%e!ROa!|ie!|i#[!|i#]!|i$x!|i%g!|iq!|ij!|i%]!|iX!|iy!|i~O%f!|i~P!*WO%f!SO~P!*WOP!bOk!OOr!QO!e!bO!g!VO!y!PO!z!PO!}!TO#O!UO#P!UO#Q!UO#R!WO#S!XO#T!XO#U!XO#V!XO#W!YO#Y![O#[!^O%YUO%e!RO%f!SO~Oa!|ie!|i#]!|i$x!|i%g!|iq!|ij!|i%]!|iX!|iy!|i~P!,iOP[Xk[Xr[Xz[X!e[X!g[X!wZX!y[X!z[X!}[X#O[X#P[X#Q[X#R[X#S[X#T[X#U[X#V[X#W[X#Y[X#[[X#][X#b[X%Y[X%e[X%f[X%g[XW[Xa[X~O#`[X~P!.sOP!bOk!OOr!QO!e!bO!g+}O!y!PO!z!PO!}+{O#O+|O#P+|O#Q+|O#R,OO#S,PO#T,PO#U,PO#V,PO#W,QO#Y,SO#[,UO#],VO%YUO%e!RO%f!SO%g!`O~O#`'WO~P!0wOP%XXk%XXr%XX!e%XX!g%XX!y%XX!z%XX!}%XX#O%XX#P%XX#Q%XX#R%XX#S%XX#T%XX#U%XX#W%XX#Y%XX#[%XX#]%XX%Y%XX%e%XX%f%XX%g%XXa%XX~Oz,XO#b,XO#V%XX#`%XXW%XX~P!2lO%]'ZO~OX${Or$yOt'[O$|#bOq%UP~Oa$}Oj%ba~Od$QOt'^Ox$QO%W$eOW%VP~OX${Or$yOt'_O$|#bOa$lXj$lX~OX#cO!k'dO~Oa'iOe%RX$x%RX~Oe'nOn'pOo'pOp'pO~P,WO#l'uO~OX'wO~O#|'zO#}'yOP#zaQ#zaV#zaW#zaX#za^#za_#zab#zad#zae#zah#zai#zak#zan#zao#zap#zar#zax#za}#za!O#za!P#za!Q#za!R#za!^#za!a#za!b#za!c#za!d#za!e#za!f#za!g#za!j#za!s#za!t#za#l#za#o#za#q#za#t#za#{#za$P#za$R#za$T#za$W#za$Y#za$|#za%Y#za%d#za#r#za#w#za#y#za~O$|'}O~Oa!uie!ui$x!uiq!uij!ui%]!uiX!uiy!ui~PB}Oa#aie#ai$x#aiq#aij#ai%]#aiX#aiy#ai~PB}OWZX`[XaZX~Oa(ROW$}X~OW(TO~O`(UO~Od(VO~OX#]O~Oj(XO~PB}Oe#ZOk#hOz(ZO$x#ZO~OW(^O~PEXO%W&PO%d&QO~O!W(`O!X(`O%W&PO%`#gO%d&QO~OXWO!V(bO~P!=eOX#cO~Oa#nOq%Ui~OapOq%^i~Oa$kiq$ki~PB}Oq(lO~OW!Uaa!Ua~P!0wOd#yOt(qOx#yO%W&POW$mXa$mX~P4zOa&oOW%_a~Od$QOt'^Ox$QO%W$eOW$pXa$pX~Oa&rOW%Va~Oa%Siq%Sij%Sie%Si$x%Si~PB}Ot)QOa$nXj$nX~P,WOa'QOj%ca~Oa'QOj%ca~PB}O#`!`aW!`a~P?sO#`!]aW!]aa!]a~P!0wOa|O%]|a~Oa$}Oj%bi~Oa'iOe%Ra$x%Ra~O#V)jO#j)kO~P.eOz#YO#V)jO#j)kO~Oe)lO~P,WOe)nO~O#r)rOP#piQ#piV#piW#piX#pi^#pi_#pib#pid#pie#pih#pii#pik#pin#pio#pip#pir#pix#pi}#pi!O#pi!P#pi!Q#pi!R#pi!^#pi!a#pi!b#pi!c#pi!d#pi!e#pi!f#pi!g#pi!j#pi!s#pi!t#pi#l#pi#o#pi#q#pi#t#pi#{#pi$P#pi$R#pi$T#pi$W#pi$Y#pi$|#pi%Y#pi%d#pi#w#pi#y#pi~OV{OW)vOb!{Oe!qOh!yOn!xOo!xOp!xO!j!uO!s!wO!t!vO#l!zO#o!|O#q!}O#t#OO#w)wO#y)xO#{#PO$P#QO$R#RO$T#SO$W#TO$Y#UO$|!mO~P`OXWOk){O~O^cO_cO$|%vOW$fXa$fX~Oa(ROW$}a~Oc*UO~Oe#ZOk#hOz*[O$x#ZO~O!W*]O!X*]O%W&PO%`#gO%d&QO~OWviavi~P!0wOz*bOWviavi~OW!Uia!Ui~P!0wOa!uqq!uqj!uqe!uq$x!uq%]!uqX!uqy!uq~PB}Oa$naj$na~PB}Oa'QOj%ci~O#`!uiW!uia!ui~P!0wOP!bOk!OOr!QO!e!bO!y!PO!z!PO%YUO!g!|i#O!|i#P!|i#Q!|i#R!|i#S!|i#T!|i#U!|i#V!|i#W!|i#Y!|i#[!|i#]!|i#`!|i%e!|i%f!|i%g!|iW!|ia!|i~O!}!|i~P!KlO!}+{O~P!KlOP!bOk!OOr!QO!e!bO!y!PO!z!PO!}+{O#O+|O#P+|O#Q+|O%YUO#R!|i#S!|i#T!|i#U!|i#V!|i#W!|i#Y!|i#[!|i#]!|i#`!|i%e!|i%f!|i%g!|iW!|ia!|i~O!g!|i~P!MnO!g+}O~P!MnOP!bOk!OOr!QO!e!bO!g+}O!y!PO!z!PO!}+{O#O+|O#P+|O#Q+|O#R,OO%YUO#W!|i#Y!|i#[!|i#]!|i#`!|i%e!|i%f!|i%g!|iW!|ia!|i~O#S!|i#T!|i#U!|i#V!|i~P# pO#S,PO#T,PO#U,PO#V,PO~P# pOP!bOk!OOr!QO!e!bO!g+}O!y!PO!z!PO!}+{O#O+|O#P+|O#Q+|O#R,OO#S,PO#T,PO#U,PO#V,PO#W,QO%YUO#Y!|i#[!|i#]!|i#`!|i%f!|i%g!|iW!|ia!|i~O%e!|i~P##{O%e!RO~P##{OP!bOk!OOr!QO!e!bO!g+}O!y!PO!z!PO!}+{O#O+|O#P+|O#Q+|O#R,OO#S,PO#T,PO#U,PO#V,PO#W,QO#Y,SO%YUO%e!RO#[!|i#]!|i#`!|i%g!|iW!|ia!|i~O%f!|i~P#%}O%f!SO~P#%}OP!bOk!OOr!QO!e!bO!g+}O!y!PO!z!PO!}+{O#O+|O#P+|O#Q+|O#R,OO#S,PO#T,PO#U,PO#V,PO#W,QO#Y,SO#[,UO%YUO%e!RO%f!SO~O#]!|i#`!|i%g!|iW!|ia!|i~P#(POa#^ye#^y$x#^yq#^yj#^y%]#^yX#^yy#^y~PB}O#`#aiW#aia#ai~P!0wOj*pO~P,WOe*rO~Oe*rO~P,WOz$VO#V*tO#j*uOa%SXe%SX$x%SX~OV{OW*yOb!{Oe!qOh!yOn!xOo!xOp!xO!j!uO!s!wO!t!vO#l!zO#o!|O#q!}O#t#OO#w)wO#y)xO#{#PO$P#QO$R#RO$T#SO$W#TO$Y#UO$|!mO~P`Oy*{O~O#}*|OP#zqQ#zqV#zqW#zqX#zq^#zq_#zqb#zqd#zqe#zqh#zqi#zqk#zqn#zqo#zqp#zqr#zqx#zq}#zq!O#zq!P#zq!Q#zq!R#zq!^#zq!a#zq!b#zq!c#zq!d#zq!e#zq!f#zq!g#zq!j#zq!s#zq!t#zq#l#zq#o#zq#q#zq#t#zq#{#zq$P#zq$R#zq$T#zq$W#zq$Y#zq$|#zq%Y#zq%d#zq#r#zq#w#zq#y#zq~O`+OO~Oa(ROW$}i~Od+QO~Oe#ZO$x#ZO~PB}OW%Sia%Si~P!0wOa$nij$ni~PB}O#`!uqW!uqa!uq~P!0wOj+^O~Oj+_O~Oj+`O~Oj+`O~P,WOe+bO~Oy+eO~Oj+gO~Oa(ROW$}q~OWvyavy~P!0wO#`#^yW#^ya#^y~P!0wOj+mO~Oj+mO~P,WOj+oO~Oj+pO~Oj+sO~O#}+tOP#z!ZQ#z!ZV#z!ZW#z!ZX#z!Z^#z!Z_#z!Zb#z!Zd#z!Ze#z!Zh#z!Zi#z!Zk#z!Zn#z!Zo#z!Zp#z!Zr#z!Zx#z!Z}#z!Z!O#z!Z!P#z!Z!Q#z!Z!R#z!Z!^#z!Z!a#z!Z!b#z!Z!c#z!Z!d#z!Z!e#z!Z!f#z!Z!g#z!Z!j#z!Z!s#z!Z!t#z!Z#l#z!Z#o#z!Z#q#z!Z#t#z!Z#{#z!Z$P#z!Z$R#z!Z$T#z!Z$W#z!Z$Y#z!Z$|#z!Z%Y#z!Z%d#z!Z#r#z!Z#w#z!Z#y#z!Z~OP[Xa[Xk[Xq[Xr[Xz[X!e[X!g[X!wZX!y[X!z[X!}[X#O[X#P[X#Q[X#R[X#S[X#T[X#U[X#V[X#W[X#Y[X#[[X#][X#b[X%Y[X%e[X%f[X%g[Xj[X~OaZXqZXzZXjZX~P#7iOq[Xj[X%][XX[X#j[Xy[X~P#dO%]%[X~P(QOP+yOQ+yOV{OXWO^cO_cOd_Oi+yOkVOrROx_O}_O!O_O!P_O!Q_O!R_O!^+zO!a+yO!b+yO!c+yO!d+yO!e+yO!f+yO!g+yO!jxO!s,eO!tyO$|$sO%YUO%d[O~OWZXaZXzZX~P!.sO!w,WO~Oz,XO~O#V,PO~Oz,XOW%TXa%TX~Oz,YOW%SXa%SX~O!w,[O~O#`,]O~P!0wO#O!R%W$|~",
  goto: "!/v%lPPPPPP%mPPP%p%v)i+yPPPPPPPP.T0iPPPP0w0}PPPPP1`P1`3z4RPPP4^7lPPPPP8e8e:gPPP:m;c;|8eP?r8ePPPPPPPAQ8ePPCcDRP;jDRDR8ePP8eDVPFbPPHh8ePPPPPPPPPPJoPKmPP8eLgP8eP8e8e8e8e8e0w0wP0iP0i0iP0iPP0iPM]M`PM`P0iPPP0iP0iP0iPMd0iP0iP0iMxMxNW%mNi%m%m%m%m%mNlNvN|! W! ^! h! v!!Q!!W!!b!!h!!n!!tPPPPPPPPPP!!z!!}!%T!&]!&}!'R!'y!(g!(kP!(oP!-T!-XP!/Q!/TP!/W!/c!/gPPPP!/j!/n!/r0iRbOQ#^dR(W%{QYOQkQWuRVn#}$z!nWXepz|!O!Q!T!U!V!W!X!Y!Z![!]!^!_!a!e!s!w!|#R#W#X#Y#_#e#t#z$V$X$c%R%]%`%b%c%d%f%j&[&i&k&z'P'Q'W'd'n'r'w(Z(q)Q)j)k)l)n)r)u)w*[*b*r*t*u+b+y+z+{+|+},O,P,Q,R,S,T,U,V,W,X,Y,[,],e,fQ#ffQ#kgQ$YxQ$[yl$|!i!x#h#n$y$}&c&j'['^'_'i'p){Q%U!uQ%W!vQ%w#]S&_#j#lS&}$]$^S'g%X%YQ(j&aQ(|'OQ)g'hQ*P(RQ*S(UR+h+O#x]ORVWXenp|!O!Q!T!U!V!W!X!Y!Z![!]!^!_!e!s!|#R#W#X#Y#_#e#t#z$V$X$c%R%`%b%c%d%f%j&[&z'P'Q'W'd'n'r'w(Z)Q)j)k)l)n)r)u)w*[*r*t*u+bSjQl!S$u!a#}&i&k(q*b+y+z+{+|+},O,P,Q,R,S,T,U,V,W,X,Y,[,],fQ%y#]Q'l%]R*Q(R#z]ORVWXenp|!O!Q!T!U!V!W!X!Y!Z![!]!^!_!e!s!|#R#W#X#Y#_#e#t#z$V$X$c%R%]%`%b%c%d%f%j&[&z'P'Q'W'd'n'r'w(Z)Q)j)k)l)n)r)u)w*[*r*t*u+b!S$u!a#}&i&k(q*b+y+z+{+|+},O,P,Q,R,S,T,U,V,W,X,Y,[,],fQ%y#]R*Q(RQbOh!qW!s!|%R%`%c%d%f'r'w)r)uQ%h#PQ%q#WS%s#X,WQ&]#iQ&{$ZQ'e%VQ(c&XQ(f&^Q(h&`Q(p&lQ(z&|S)O'P,[Q)e'fQ)y'yQ)z'zQ*W([Q*_(gQ*`(iQ*d(vQ*g({Q*l)fQ+S*XQ+W*aQ+Y*eQ+Z*hQ+]*mQ+f*|Q+j+TQ+q+gQ+r+lR+u+ti!qW!s!|%R%`%c%d%f'r'w)r)uQ%`!yR'r%ah!pW!s!|%R%`%c%d%f'r'w)r)uR'n%]#r^OWXep|!O!Q!T!U!V!W!X!Y!Z![!]!^!_!e!s!|#R#W#X#Y#_#e#t#z$V$X$c%R%`%b%c%d%f%j&[&z'P'Q'W'd'n'r'w(Z)Q)j)k)l)n)r)u)w*[*r*t*u+bUvRVnl$|!i!x#h#n$y$}&c&j'['^'_'i'p){Q'm%]!Q,_!a&i&k(q*b+y+z+{+|+},O,P,Q,R,S,T,U,V,W,X,Y,[,],fR,a#}S$Rt${R(t&rU$Qt${&rQ$f!PR%}#`%O_ORVWXenp|!O!Q!T!U!V!W!X!Y!Z![!]!^!_!a!e!s!|#R#W#X#Y#_#e#t#z#}$V$X$c%R%]%`%b%c%d%f%j&[&i&k&z'P'Q'W'd'n'r'w(Z(q)Q)j)k)l)n)r)u)w*[*b*r*t*u+b+y+z+{+|+},O,P,Q,R,S,T,U,V,W,X,Y,[,],f#e!dSr#V#a#q#s$`$b$h$i$j$k$l$m$n$o$p$q$r$t%t%u%|&g&m&w'S'V'X(m(o(})P)T)U)V)W)X)Y)Z)[)])^)_)`)a)b*V*c*i*j+U+X+[+x,d!mTOVW!Q!e!s!|#R#W#e#z$X%R%]%`%b%c%d%f%j&[&z'd'n'r'w)j)k)l)n)r)u)w*r*t*u+b%P_ORVWXenp|!O!Q!T!U!V!W!X!Y!Z![!]!^!_!a!e!s!|#R#W#X#Y#_#e#t#z#}$V$X$c%R%]%`%b%c%d%f%j&[&i&k&z'P'Q'W'd'n'r'w(Z(q)Q)j)k)l)n)r)u)w*[*b*r*t*u+b+y+z+{+|+},O,P,Q,R,S,T,U,V,W,X,Y,[,],fQ$OtR(r&oQ#jgS$Tt&oQ$]yQ%X!vS&V#c&TQ&a#lQ&v$UQ'O$^Q'h%YS(`&W&XR*](bY#yt$T$U&o&vS&R#c&TS(_&V&WQ(a&XS*Y(`(bR+V*]#zZORVWXenp|!O!Q!T!U!V!W!X!Y!Z![!]!^!_!e!s!|#R#W#X#Y#_#e#t#z$V$X$c%R%]%`%b%c%d%f%j&[&z'P'Q'W'd'n'r'w(Z)Q)j)k)l)n)r)u)w*[*r*t*u+bQ#igQ$ZyS$_z!wQ%V!vS&^#j#lQ&`#kQ&l#|U&|$[$]$^U'f%W%X%YQ([&RQ(g&_Q(i&aQ(v&uS({&}'OS)f'g'hS*X(_(aQ*a(jQ*e(wQ*h(|Q*m)gQ+T*YQ+l+V!S,^!a#}&i&k(q*b+y+z+{+|+},O,P,Q,R,S,T,U,V,W,X,Y,[,],fR,c,e#`!cSr#V#q#s$`$b$h$i$j$k$l$m$n$o$p$q$r$t%t%u%|&g&m&w'S'V(m(o(})P)T)U)V)W)X)Y)Z)[)])^)_)`)a)b*V*c*i*j+U+X+[+x,dT&O#a'X%O_ORVWXenp|!O!Q!T!U!V!W!X!Y!Z![!]!^!_!a!e!s!|#R#W#X#Y#_#e#t#z#}$V$X$c%R%]%`%b%c%d%f%j&[&i&k&z'P'Q'W'd'n'r'w(Z(q)Q)j)k)l)n)r)u)w*[*b*r*t*u+b+y+z+{+|+},O,P,Q,R,S,T,U,V,W,X,Y,[,],fQ%c!zQ%d!{Q%f!}Q%g#OR)q'uQ#dfQ$WxQ&Z#fQ&y$YQ'c%UQ(d&YQ(x&xQ*^(eQ*f(yR*k)dT&S#c&T#zZORVWXenp|!O!Q!T!U!V!W!X!Y!Z![!]!^!_!e!s!|#R#W#X#Y#_#e#t#z$V$X$c%R%]%`%b%c%d%f%j&[&z'P'Q'W'd'n'r'w(Z)Q)j)k)l)n)r)u)w*[*r*t*u+bS$_z!w!S,^!a#}&i&k(q*b+y+z+{+|+},O,P,Q,R,S,T,U,V,W,X,Y,[,],fR,c,e#x]ORVWXenp|!O!Q!T!U!V!W!X!Y!Z![!]!^!_!e!s!|#R#W#X#Y#_#e#t#z$V$X$c%R%`%b%c%d%f%j&[&z'P'Q'W'd'n'r'w(Z)Q)j)k)l)n)r)u)w*[*r*t*u+b!S$u!a#}&i&k(q*b+y+z+{+|+},O,P,Q,R,S,T,U,V,W,X,Y,[,],fR'l%]#ziORVWXenp|!O!Q!T!U!V!W!X!Y!Z![!]!^!_!e!s!|#R#W#X#Y#_#e#t#z$V$X$c%R%]%`%b%c%d%f%j&[&z'P'Q'W'd'n'r'w(Z)Q)j)k)l)n)r)u)w*[*r*t*u+bQ$f!P!T,`!a#}&i&k(q*b+y+z+{+|+},O,P,Q,R,S,T,U,V,W,X,Y,[,],f!Q!ZSr#a#q#s$`$b$o$p$q$r%t%u%|&g&w'S(})P)a*V*i+U+xq,R$t&m'X(m(o)T)])^)_)`)b*c*j+X+[,d|!]Sr#a#q#s$`$b$q$r%t%u%|&g&w'S(})P)a*V*i+U+xm,T$t&m'X(m(o)T)_)`)b*c*j+X+[,dx!aSr#a#q#s$`$b%t%u%|&g&w'S(})P)a*V*i+U+xi,f$t&m'X(m(o)T)b*c*j+X+[,dR'x%gT)s'w)uh!oW!s!|%R%`%c%d%f'r'w)r)uQ(O%mR(P%oi!pW!s!|%R%`%c%d%f'r'w)r)uQbOi!qW!s!|%R%`%c%d%f'r'w)r)uRaOQ(S%wS*R(S+PR+P*SQ!sWR%S!sQ#omS&d#o&eR&e#pQ!gUR$w!gQ}SS$a}'YR'Y+xQqRU#uq#v&fQ#vrR&f#qQ%O!jQ']$zT'a%O']Q&p$OR(s&pQ'R$bS)R'R)SR)S'SQ&T#cR(]&TQ&s$RR(u&sQ'j%ZR)i'jQ)u'wR*x)uR%x#]QQO%RlRVWXenp|!O!Q!T!U!V!W!X!Y!Z![!]!^!_!a!e!s!|#R#W#X#Y#]#_#e#t#z#}$V$X$c%R%]%`%b%c%d%f%j&[&i&k&z'P'Q'W'd'n'r'w(R(Z(q)Q)j)k)l)n)r)u)w*[*b*r*t*u+b+y+z+{+|+},O,P,Q,R,S,T,U,V,W,X,Y,[,],fQ#[`Q%i#QQ%l#SQ%n#TQ%p#UQ'k%[Q'|%kQ(Q%rQ(Y&RQ)|'{Q)}(OQ*O(PQ*T(VQ*Z(aQ*v)qQ+R*VQ+i+QR+k+US!rW!sQ%e!|Q'b%RQ'q%`Q's%cQ't%dQ'v%fQ)p'rS)s'w)uR*w)rT%[!x'pSmR$yS!jV#hS#pn'[Q$z!iS%Z!x'pQ&b#nS&n#}'^Q'`$}Q(k&cQ)c'_R)h'ijwRVn!i!x#h#n$y$}&c'['_'iQ(n&jQ)o'pQ*}){T,b#}'^ToR$yT$St${!jSOVW!Q!s!|#R#W#e#z$X%R%]%`%b%c%d%f%j&[&z'd'n'r'w)j)k)l)n)r)u)w*r*t*u+bQrRQ#VXQ#aeQ#qnQ#spQ$`|Q$b!OQ$h!TQ$i!UQ$j!VQ$k!WQ$l!XQ$m!YQ$n!ZQ$o![Q$p!]Q$q!^Q$r!_Q$t!aQ%t#XQ%u#YQ%|#_Q&g#tS&m#}(qQ&w$VQ'S$cQ'V+yQ'X+zQ(m&iQ(o&kQ(}'PQ)P'QQ)T,WQ)U+{Q)V+|Q)W+}Q)X,OQ)Y,PQ)Z,QQ)[,RQ)],SQ)^,TQ)_,UQ)`,VQ)a'WQ)b,XQ*V(ZQ*c,YQ*i)QQ*j,[Q+U*[Q+X*bQ+[,]Q+x!eR,d,fT!fU!gj`OW!s!|%R%`%c%d%f'r'w)r)uS!lV%bQ$g!QQ$v!eQ%k#RQ%r#WQ&Y#eQ&h#zQ&x$XQ'o%]Q'{%jQ(e&[Q(y&zQ)d'dQ)m'nQ*n)jQ*o)kQ*q)lQ*s)nQ*z)wQ+a*rQ+c*tQ+d*uR+n+bRsRR$PtS#|t&oS&u$T$UR(w&vT!kV#hR$d!OT%^!y%aT%_!y%aT)t'w)u",
  nodeNames: "⚠ ArithOp ArithOp LineComment BlockComment Cell ImportDeclaration import } { ImportGroup VariableDefinition VariableName QualifiedVariableName viewof mutable as , with from String ; Block ForStatement for await ) ( ForSpec VariableDeclaration let var const ] [ ArrayPattern Spread ObjectPattern PatternProperty PropertyName Number : Equals TemplateString SequenceExpression BooleanLiteral this null super RegExp ArrayExpression ObjectExpression Property async get set Star PropertyDefinition ParamList NewExpression new ArgList UnaryExpression yield void typeof delete LogicOp BitOp ArithOp ParenthesizedExpression ClassExpression class extends ClassBody MethodDeclaration static PrivatePropertyDefinition PropertyDeclaration StaticBlock FunctionExpression async function ArrowFunction ParamList Arrow MemberExpression . ?. PrivatePropertyName BinaryExpression ArithOp ArithOp ArithOp ArithOp BitOp CompareOp CompareOp instanceof in CompareOp BitOp BitOp BitOp LogicOp LogicOp ConditionalExpression LogicOp LogicOp AssignmentExpression UpdateOp PostfixExpression CallExpression TaggedTemplateExpression DynamicImport ImportMeta ForInSpec ForOfSpec of WhileStatement while WithStatement DoStatement do IfStatement if else SwitchStatement switch SwitchBody CaseLabel case DefaultLabel default TryStatement try catch finally ReturnStatement return ThrowStatement throw BreakStatement break Label ContinueStatement continue DebuggerStatement debugger LabeledStatement FunctionDeclaration ClassDeclaration ExpressionStatement NamedBlockCell QualifiedVariableDefinition NamedExpressionCell UnnamedClassCell NamedClassCell UnnamedFunctionCell NamedFunctionCell",
  maxTerm: 211,
  context: trackNewline,
  nodeProps: [
    [common.NodeProp.openedBy, 8,"{",26,"(",33,"["],
    [common.NodeProp.closedBy, 9,"}",27,")",34,"]"],
    [common.NodeProp.group, -28,12,13,20,40,43,44,45,46,47,48,49,50,51,59,62,70,71,80,83,86,90,106,109,111,112,113,114,115,"Expression",-19,21,22,23,29,119,121,122,124,127,134,138,140,142,145,147,149,150,151,152,"Statement",-3,75,78,79,"ClassItem"]
  ],
  skippedNodes: [0,3,4],
  repeatNodeCount: 13,
  tokenData: ">q~R!YXY$qYZ%fZ[$q]^%fpq$qqr%krs&Qst&ttu'ouv(Yvw(gwx(zxy)iyz)nz{)s{|*Y|}*b}!O*Y!O!P*g!P!Q,T!Q!R6R!R![6s![!]9[!]!^9c!^!_9h!_!`:Q!`!a:b!a!b:x!c!}'o!}#O;b#P#Q;g#Q#R;l#R#S'o#S#T;t#T#o'o#o#p;y#p#q<O#q#r<Z#r#s<b$f$g$q$g#BY'o#BY#BZ<g#BZ$IS'o$IS$I_<g$I_$I|'o$I|$I}>U$I}$JO>U$JO$JT'o$JT$JU<g$JU$KV'o$KV$KW<g$KW&FU'o&FU&FV<g&FV?HT'o?HT?HU<g?HU~'o~$vY$z~XY$qZ[$qpq$q$f$g$q#BY#BZ$q$IS$I_$q$JT$JU$q$KV$KW$q&FU&FV$q?HT?HU$q~%kO${~~%pP!e~!_!`%s~%xP#W~!_!`%{~&QO#W~~&VUd~OY&QZr&Qrs&is#O&Q#O#P&n#P~&Q~&nOd~~&qPO~&Q~&wTtu'W!c!}'W#R#S'W#T#o'W$g~'W~']U%d~tu'W!Q!['W!c!}'W#R#S'W#T#o'W$g~'W_'vU%WS$|Ztu'o!Q!['o!c!}'o#R#S'o#T#o'o$g~'o~(_P#P~!_!`(bY(gO#bY~(lQ%f~vw(r!_!`(b~(wP#[~!_!`(b~)PUd~OY(zZw(zwx&ix#O(z#O#P)c#P~(z~)fPO~(z~)nOk~~)sOj~_)zQ%`T#QYz{*Q!_!`(bY*VP!}Y!_!`(b~*_P!g~!_!`(b~*gOa~_*lQ!yY!O!P*r!Q![*}T*uP!O!P*xT*}OtTT+SSxT!Q![*}!g!h+`#R#S*}#X#Y+`T+cS{|+o}!O+o!Q![+x#R#S+xT+rQ!Q![+x#R#S+xT+}QxT!Q![+x#R#S+x~,YZ#OYOY,{Zz,{z{.t{!P,{!P!Q5Y!Q!_,{!_!`5e!`!},{!}#O.O#O#P.k#P~,{P-QV!RPOY,{Z!P,{!P!Q-g!Q!},{!}#O.O#O#P.k#P~,{P-lU!RP#Z#[-g#]#^-g#a#b-g#g#h-g#i#j-g#m#n-gP.RTOY.OZ#O.O#O#P.b#P#Q,{#Q~.OP.eQOY.OZ~.OP.nQOY,{Z~,{~.yY!RPOY.tYZ/iZz.tz{0^{!P.t!P!Q4U!Q!}.t!}#O1l#O#P3r#P~.t~/lROz/iz{/u{~/i~/xTOz/iz{/u{!P/i!P!Q0X!Q~/i~0^OS~~0cY!RPOY.tYZ/iZz.tz{0^{!P.t!P!Q1R!Q!}.t!}#O1l#O#P3r#P~.t~1YUS~!RP#Z#[-g#]#^-g#a#b-g#g#h-g#i#j-g#m#n-g~1oWOY1lYZ/iZz1lz{2X{#O1l#O#P3`#P#Q.t#Q~1l~2[YOY1lYZ/iZz1lz{2X{!P1l!P!Q2z!Q#O1l#O#P3`#P#Q.t#Q~1l~3PTS~OY.OZ#O.O#O#P.b#P#Q,{#Q~.O~3cTOY1lYZ/iZz1lz{2X{~1l~3uTOY.tYZ/iZz.tz{0^{~.t~4Z_!RPOz/iz{/u{#Z/i#Z#[4U#[#]/i#]#^4U#^#a/i#a#b4U#b#g/i#g#h4U#h#i/i#i#j4U#j#m/i#m#n4U#n~/i~5_QR~OY5YZ~5YZ5lV#bY!RPOY,{Z!P,{!P!Q-g!Q!},{!}#O.O#O#P.k#P~,{T6WXxT!O!P*}!Q![6s!g!h+`#R#S6s#U#V7a#X#Y+`#b#c7[#c#d8O#l#m8gT6xUxT!O!P*}!Q![6s!g!h+`#R#S6s#X#Y+`#b#c7[T7aOxTT7dR!Q!R7m!R!S7m#R#S7mT7rSxT!Q!R7m!R!S7m#R#S7m#b#c7[T8RQ!Q!Y8X#R#S8XT8^RxT!Q!Y8X#R#S8X#b#c7[T8jS!Q![8v!c!i8v#R#S8v#T#Z8vT8{TxT!Q![8v!c!i8v#R#S8v#T#Z8v#b#c7[Z9cOyR#`W~9hOe~~9mQ#S~!^!_9s!_!`9{~9xP#R~!_!`(b~:QO#T~~:VQz~!_!`%s!`!a:]~:bO!w~~:gQ#T~!_!`9{!`!a:m~:rQ#R~!_!`(b!`!a9s~:}Q%g~!O!P;T!a!b;Y~;YO!z~~;_P#]~!_!`(b~;gOr~~;lOq~~;qP#Y~!_!`(b~;yO%Y~~<OOX~~<TQ%e~!_!`(b#p#q;Y_<bOW]%]Q~<gO!f~~<pf$z~%WS$|ZXY$qZ[$qpq$qtu'o!Q!['o!c!}'o#R#S'o#T#o'o$f$g$q$g#BY'o#BY#BZ<g#BZ$IS'o$IS$I_<g$I_$JT'o$JT$JU<g$JU$KV'o$KV$KW<g$KW&FU'o&FU&FV<g&FV?HT'o?HT?HU<g?HU~'o~>_U${~%WS$|Ztu'o!Q!['o!c!}'o#R#S'o#T#o'o$g~'o",
  tokenizers: [noSemicolon, incdecToken, template, 0, 1, 2, 3, insertSemicolon],
  topRules: {"Cell":[0,5]},
  dynamicPrecedences: {"153":1,"155":1},
  specialized: [{term: 182, get: value => spec_identifier[value] || -1},{term: 192, get: value => spec_word[value] || -1}],
  tokenPrec: 5560
});

exports.parser = parser;
